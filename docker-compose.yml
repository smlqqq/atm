services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    ports:
      - "2181:2181"

  kafka:
    image: apache/kafka:3.8.0
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_KRAFT_MODE: "true"
      KAFKA_CLUSTER_ID: my-cluster
      KAFKA_DATA_DIR: /var/lib/kafka/data
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  app:
    image: spring-boot-atm
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: bank_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

#  flyway:
#    image: flyway/flyway
#    container_name: flyway
#    depends_on:
#      - postgres
#    command: -url=jdbc:postgresql://postgres:5432/bank_db -user=postgres -password=postgres -locations=filesystem:/flyway/sql migrate
#    volumes:
#      - ./src/main/resources/db/migration:/flyway/sql

volumes:
  postgres_data:
  kafka_data:


# docker-compose up --build

#  docker login
#  docker tag exchange-rate-data-parser a1j1oqnl52/spring-boot-atm
#  docker push a1j1oqnl52/spring-boot-atm:latest
